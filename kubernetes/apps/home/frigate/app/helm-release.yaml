---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app frigate
  namespace: home
spec:
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      interval: 5m
  install:
    createNamespace: true
  dependsOn:
    - name: mosquitto
      namespace: home
  values:
    image:
      repository: docker.io/blakeblackshear/frigate
      tag: 0.11.1
    env:
      TZ: "${TIMEZONE}"
      LIBVA_DRIVER_NAME: i965
    service:
      main:
        ports:
          http:
            port: &port 5000
          rtsp:
            enabled: true
            port: 8554
    probes:
      liveness: &probes
        enabled: true
        custom: true
        spec:
          httpGet:
            path: /api/version
            port: *port
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
      readiness: *probes
      startup:
        enabled: false
    ingress:
      main:
        enabled: true
        ingressClassName: "nginx"
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/group: "home"
          hajimari.io/icon: "cctv"
        hosts:
          - host: &host "frigate.${SECRET_PRIVATE_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
    securityContext:
      privileged: true
    persistence:
      config-file:
        enabled: true
        type: configMap
        name: frigate-configmap
        subPath: config.yml
        mountPath: /config/config.yml
        readOnly: true
      data:
        enabled: true
        existingClaim: frigate-config-v1
        mountPath: /data
      media:
        enabled: true
        existingClaim: frigate-media-v1
        mountPath: /media
      usb:
        enabled: true
        type: hostPath
        hostPath: /dev/bus/usb
      cache:
        enabled: true
        type: emptyDir
        medium: Memory
        sizeLimit: 2Gi
        mountPath: /dev/shm
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: kubernetes.io/hostname
                  operator: In
                  values:
                    - vega
    podAnnotations:
      configmap.reloader.stakater.com/reload: "frigate-config"
      backup.velero.io/backup-volumes-excludes: "media,usb,cache"
    configmap:
      config:
        enabled: true
        data:
          config.yml: |
            mqtt:
              host: mosquitto
              topic_prefix: frigate
              user: "${SECRET_MQTT_USERNAME}"
              password: "${SECRET_MQTT_PASSWORD}"

            database:
              path: /data/frigate.db

            # Global objects configuration
            objects:
              track:
                - person
                - dog
                - cat
                - bird
              filters:
                person:
                  min_area: 5000
                  max_area: 100000
                  threshold: 0.7

            detectors:
              coral:
                type: edgetpu
                device: usb

            # Global ffmpeg configuration
            ffmpeg:
              global_args: ["-hide_banner", "-loglevel", "warning"]
              hwaccel_args: ["-hwaccel", "vaapi", "-hwaccel_device", "/dev/dri/renderD128", "-hwaccel_output_format", "yuv420p"]
              output_args:
                record: -f segment -segment_time 10 -segment_format mp4 -reset_timestamps 1 -strftime 1 -c:v copy -c:a aac

            rtmp:
              enabled: true

            snapshots:
              enabled: true
              timestamp: false
              bounding_box: true
              retain:
                default: 30

            record:
              enabled: true
              retain:
                days: 7
                mode: all
              events:
                retain:
                  default: 30
                  mode: active_objects

            go2rtc:
              streams:
                frigate_backyard_hq: rtsp://${SECRET_FRIGATE_CAMERA_AUTH}@10.20.30.151/Streaming/Channels/101/
                # TODO change me
                frigate_backyard_lq: rtsp://${SECRET_FRIGATE_CAMERA_AUTH}@10.20.30.151/Streaming/Channels/101/

            # Cameras
            cameras:
              # --
              frigate_backyard:
                ffmpeg:
                  inputs:
                  - path: rtsp://localhost:8553/frigate_backyard_hq
                    roles:
                      - rtmp
                      - record
                  - path: rtsp://localhost:8553/frigate_backyard_lq
                    roles:
                      - detect
                detect:
                  width: 1024
                  height: 576
                  fps: 10
